<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://fr4nk1in-ustc.github.io/</id><title>Fr4nk1in</title><subtitle>A USTC Computer Sci. &amp; Tech. Student.</subtitle> <updated>2022-07-29T02:26:11+08:00</updated> <author> <name>Fr4nk1in</name> <uri>https://fr4nk1in-ustc.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://fr4nk1in-ustc.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://fr4nk1in-ustc.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Fr4nk1in </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>个人 Kitty Terminal 配置文件</title><link href="https://fr4nk1in-ustc.github.io/posts/kitty/" rel="alternate" type="text/html" title="个人 Kitty Terminal 配置文件" /><published>2021-07-22T22:00:00+08:00</published> <updated>2022-07-22T22:23:35+08:00</updated> <id>https://fr4nk1in-ustc.github.io/posts/kitty/</id> <content src="https://fr4nk1in-ustc.github.io/posts/kitty/" /> <author> <name>Fr4nk1in</name> </author> <category term="Computer" /> <category term="Tools" /> <summary> 配置文件 # font font_family ComicCodeLigatures-Regular bold_font ComicCodeLigatures-Bold italic_font ComicCodeLigatures-MediumItalic bold_italic_font ComicCodeLigatures-BoldItalic font_size 11.0 adjust_line_height -8 adjust_column_width 1 adjust_baseline -2 symbol_map U+2E80-U+2EFF,U+3000-U+303F,U+3200-U+4DBF,U+4E00-U+9FFF,U+FE30-U+FE4F,U+20000-U+2A6DF,U+2F800-U+2FA1F Sarasa Mo... </summary> </entry> <entry><title>一个 RISC-V 32 位指令集子集的五级流水线 CPU 数据通路</title><link href="https://fr4nk1in-ustc.github.io/posts/riscv_minimal/" rel="alternate" type="text/html" title="一个 RISC-V 32 位指令集子集的五级流水线 CPU 数据通路" /><published>2021-05-18T10:00:00+08:00</published> <updated>2021-05-18T10:00:00+08:00</updated> <id>https://fr4nk1in-ustc.github.io/posts/riscv_minimal/</id> <content src="https://fr4nk1in-ustc.github.io/posts/riscv_minimal/" /> <author> <name>Fr4nk1in</name> </author> <category term="Computer" /> <category term="Hardware" /> <category term="Implementation" /> <summary> 实现了 add, addi, lw, sw, beq, jal 指令. </summary> </entry> <entry><title>个人 clang-format-15 配置文件</title><link href="https://fr4nk1in-ustc.github.io/posts/clang_format/" rel="alternate" type="text/html" title="个人 clang-format-15 配置文件" /><published>2021-05-16T16:45:00+08:00</published> <updated>2022-07-22T22:24:14+08:00</updated> <id>https://fr4nk1in-ustc.github.io/posts/clang_format/</id> <content src="https://fr4nk1in-ustc.github.io/posts/clang_format/" /> <author> <name>Fr4nk1in</name> </author> <category term="Computer" /> <category term="Tools" /> <summary> 配置文件 DisableFormat: false # Tab &amp;amp; Indent TabWidth: 4 IndentWidth: 4 PPIndentWidth: 4 UseCRLF: false UseTab: Never # Configurations AccessModifierOffset: -2 AlignAfterOpenBracket: Align AlignArrayOfStructures: Right AlignConsecutiveAssignments: Enabled: true AcrossEmptyLines: false AcrossComments: false AlignCompound: true PadOperators: false AlignConsecutiveBitFields: Enabled... </summary> </entry> <entry><title>关于 exec() 函数族的参数</title><link href="https://fr4nk1in-ustc.github.io/posts/exec/" rel="alternate" type="text/html" title="关于 exec() 函数族的参数" /><published>2021-03-05T01:30:00+08:00</published> <updated>2022-03-09T13:31:42+08:00</updated> <id>https://fr4nk1in-ustc.github.io/posts/exec/</id> <content src="https://fr4nk1in-ustc.github.io/posts/exec/" /> <author> <name>Fr4nk1in</name> </author> <category term="Computer" /> <category term="Software" /> <category term="Implementation" /> <summary> 问题 今天上 OS 课的时候, 老师讲了一个系统调用族 exec() 中的函数 execl(). 它的参数是 int execl(const char *path, const char *arg0, const char *arg1, ..., NULL); // path - executable file path // arg - argument to pass to the executable 看上去和在终端执行命令一样, 我以为就是 path arg0 arg1 ... 但是实际上, 如果我们想执行 ls -l, 我们需要传参 execl("/bin/ls", "ls", "l", NULL); 或者 execl("/bin/ls", "/bin/ls", "l", NULL); 注意其中第一个参数和第二个参数都是必须的, 否则就无法成功运行... </summary> </entry> <entry><title>MiniConda 与 Python 环境</title><link href="https://fr4nk1in-ustc.github.io/posts/conda/" rel="alternate" type="text/html" title="MiniConda 与 Python 环境" /><published>2021-03-05T01:30:00+08:00</published> <updated>2021-03-05T01:30:00+08:00</updated> <id>https://fr4nk1in-ustc.github.io/posts/conda/</id> <content src="https://fr4nk1in-ustc.github.io/posts/conda/" /> <author> <name>Fr4nk1in</name> </author> <category term="Computer" /> <category term="Tools" /> <summary> 下载安装 MiniConda 在下载界面选择合适的下载器, 下载并运行, 一路默认即可. 安装完成后, 在开始菜单会出现 Anaconda Prompt (Miniconda 3) 和 Anaconda Powershell Prompt (Miniconda 3), 这两个就是 Miniconda 的终端. 打开某一个并输入 python, 你就运行了一个 Python 解释器. 配置 Python 环境 创建虚拟 Python 环境 命令结构为 conda create -n [envName] python=&amp;lt;pyVersion&amp;gt; 比如我在 Miniconda 的终端中输入 conda create -n python-3.9 python=3.9 就创建了一个名为 python-3.9 的 Python 3.9 环境. 触发 Python 环境 co... </summary> </entry> </feed>
